apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongo
  name: mongo
spec:
  type: NodePort
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    app: mongo
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: mongo-claim0
  name: mongo-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - args:
            - mongod
            - --oplogSize
            - "128"
            - --profile=1
            - --slowms=500
            - --replSet
            - rs0
          image: mongo:4.2
          name: mongo
          ports:
            - containerPort: 27017
          volumeMounts:
            - mountPath: /data/db
              name: mongo-claim0
      volumes:
        - name: mongo-claim0
          persistentVolumeClaim:
            claimName: mongo-claim0
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo-init-replica
  name: mongo-init-replica
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-init-replica
  template:
    metadata:
      labels:
        app: mongo-init-replica
    spec:
      containers:
        - args:
            - bash
            - -c
            - |-
              for i in `seq 1 30`; do
                  mongo mongo/steedos --eval "
                    rs.initiate({
                      _id: 'rs0',
                      members: [ { _id: 0, host: 'localhost:27017' } ]})" &&
                  s=$? && break || s=$?;
                  echo "Tried $i times. Waiting 5 secs...";
                  sleep 5;
                done; (exit $s)
          image: mongo:4.2
          name: mongo-init-replica